import React, { useCallback } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import { r as rootRouteRef, b as SearchBarBase } from './index-f5f6f3f0.esm.js';
import qs from 'qs';
import { useNavigate } from 'react-router-dom';
import { useRouteRef } from '@backstage/core-plugin-api';
import '@backstage/errors';
import '@material-ui/core';
import '@backstage/core-components';
import '@material-ui/icons/FilterList';
import 'react-use';
import '@material-ui/icons/Search';
import '@material-ui/icons/Clear';
import 'react-router';
import '@material-ui/core/InputBase';
import '@material-ui/core/IconButton';
import '@material-ui/lab';
import '@backstage/plugin-catalog-react';
import '@backstage/catalog-model';
import '@material-ui/icons/ArrowBackIos';
import '@material-ui/icons/ArrowForwardIos';

const useNavigateToQuery = () => {
  const searchRoute = useRouteRef(rootRouteRef);
  const navigate = useNavigate();
  return useCallback(({query}) => {
    const queryString = qs.stringify({query}, {addQueryPrefix: true});
    navigate(`${searchRoute()}${queryString}`);
  }, [navigate, searchRoute]);
};

const useStyles = makeStyles({
  searchBar: {
    border: "1px solid #555",
    borderRadius: "6px",
    fontSize: "1.5em"
  }
});
const HomePageSearchBar = ({placeholder}) => {
  const [query, setQuery] = React.useState("");
  const handleSearch = useNavigateToQuery();
  const classes = useStyles();
  const handleSubmit = () => {
    handleSearch({query});
  };
  const handleChange = React.useCallback((value) => {
    setQuery(value);
  }, [setQuery]);
  return /* @__PURE__ */ React.createElement(SearchBarBase, {
    onSubmit: handleSubmit,
    onChange: handleChange,
    value: query,
    className: classes.searchBar,
    placeholder
  });
};

export { HomePageSearchBar };
//# sourceMappingURL=index-b832898d.esm.js.map
